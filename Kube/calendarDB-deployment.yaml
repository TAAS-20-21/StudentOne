apiVersion: v1
kind: Service
metadata:
  name: calendar-db      #DNS name
  labels:
    app: calendar-db
    tier: database
spec:
  ports:
    - port: 5435
      targetPort: 5432
  selector:       # mysql Pod Should contain same labels
    app: calendar-db
    tier: database
---
#  clusterIP: None  # We Use DNS, Thus ClusterIP is not relevant

# Define a 'Persistent Voulume Claim'(PVC) for Mysql Storage, dynamically provisioned by cluster
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: calendar-db-pv-claim # name of PVC essential for identifying the storage data
  labels:
    app: calendar-db
    tier: database
spec:
  accessModes:
    - ReadWriteOnce   #This specifies the mode of the claim that we are trying to create.
  resources:
    requests:
      storage: 256Mi    #This will tell kubernetes about the amount of space we are trying to claim.
---
# Configure 'Deployment' of mysql server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: calendar-db
  labels:
    app: calendar-db
    tier: database
spec:
  selector: # mysql Pod Should contain same labels
    matchLabels:
      app: calendar-db
      tier: database
  strategy:
    type: Recreate
  template:
    metadata:
      labels: # Must match 'Service' and 'Deployment' selectors
        app: calendar-db
        tier: database
    spec:
      containers:
        - image: postgres:latest # image from docker-hub
          name: postgres
          envFrom:
            - configMapRef:
                name: calendar-db-config
          ports:
            - containerPort: 5435
              name: calendar-db
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: calendar-db
      volumes:
        - name: calendar-db # Obtaining 'volume' from PVC
          persistentVolumeClaim:
            claimName: calendar-db-pv-claim
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: calendar-db-config
data:
    POSTGRES_DB: Courses
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: pie
    PGDATA: /var/lib/postgresql/data